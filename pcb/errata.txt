v1.0 First board sent for fabrication
=====================================

Wrong footprint for the Spectrum edge connector. I used
zxbus:ZX_Bus_Pin_Header, which is two rows of pin headers about
2.5mm apart. They should be 5mm apart.

In my previous projects I appear to have modified the footprint
myself. I only vaguely remember doing it, but I think I did. I
didn't copy that footprint out to this project, I used the one
from the library which is too small.

Further, the holes are too small. They were a tight fit previously
but I've bought 200 header rows from China and it appears their pins
are very slightly larger and they don't fit in the holes.

I think the solution is to use zxedge:Spectrum_Edge_Connector, which is
the correctly spaced footprint, which larger holes. I can't remember
where I got this library from, so it's another punt.
:: Fixed



I forgot the label in the silkscreen. Need to add a v1.1 to the next one.
:: Fixed



Break the signals which would do damage to the Pico out to another
connector header, so they aren't so easy to get wrong. +5V, -5V, +9V and
+12V are the obvious ones. There might be others.
:: Fixed, I move them to the end of the connector and marked them 
   in the silk screen



Wire /INT up to GPIO15 on Pico1. I have the test for this and it
correctly sees 50Hz.
:: Done



Wire /CLK up to GPIO14 on Pico1. Tests for contended and noncontended
frquencies are in place.
:: Done



Wire up ZXHALT to GPIO13 on Pico1. Will reveal if Z80 is stuck in a
HALT lock (Z80 has execute HALT with interrupts disabled).
:: Decided against, low value test. HALT is on the socket connector



Wire up ZXNMI to GPIO12 on Pico1. Will reveal if Z80 is stuck with
incoming NMIs.
:: Decided against, low value test. NMI is on the socket connector



Wire up ZXM1 to GPIO11 on Pico1. Will reveal if Z80 is one with broken M1.
:: Done



v1.1 Second board, has the correct edge connector footprint
===========================================================

I'm only using a single input button. Remove the other, reclaim
the GPIO.
: Done on v1.2

Missing off /IORQ was a mistake. Use the GPIO freed up by removing
the second user button to connect this signal to the Pico.
: Done on v1.2

The second Pico needs to collect addresses that appear on the address
bus. To do that it needs to see the MREQ, RD and CLK lines, so it
can tell when a valid address is ready for it to pick up.
: Done on v1.2
: On development board I've connected MREQ, RD and CLK to GPIOs
16, 17 and 18. Matches the modification to the schematic and PCB
layout for v1,2.

It needs a GND pad on the top or side. Linking up a scope probe is
to ZX GND currently rather hard.
: Done on PCB

Due to the standard 1N4148 diodes I used for clamping the -5V input
to the Pico, I have the possibility of -0.7V going into the ADC.
The minimum allowed by the Pico is -0.5V. Change the clamping diodes
to schottky ones to keep the clamp at -0.3V to -0.5V.
: Done on schematic, footprint updated on PCB

The top of the -5V voltage divider comes from +5V, which is from the
system under test and hence isn't reliable. Change it to +3.3V from
the Pico, which is precise. Rebalance the voltage divider and ensure
it works as expected.
: All done on schematic and PCB. Top of the -5V divider is now 3V3
from the Pico, R1 is 390R and R2 remains 1K5. Code has been updated
and tested with a patched v1.1 board, seems to work.



v1.2 Third Pico based board, not sent yet
=========================================